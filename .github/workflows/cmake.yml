name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    #Global Setup
    - name: arm-none-eabi-gcc GNU Arm Embedded Toolchain
      uses: carlosperate/arm-none-eabi-gcc-action@v1.5.2

    - name: Checkout GP2040-CE
      uses: actions/checkout@v2
    
    - name: Checkout submodules
      working-directory: ${{github.workspace}}
      run: git submodule update --init
    
    - name: Checkout pico-sdk/1.4.0
      uses: actions/checkout@v2
      with:
        repository: raspberrypi/pico-sdk
        ref: 1.4.0
        path: pico-sdk
        
    - name: Checkout pico-sdk submodules
      working-directory: ${{github.workspace}}/pico-sdk
      run: git submodule update --init
    
    - name: Get core count
      id: core_count
      run : cat /proc/cpuinfo  | grep processor | wc -l
      #End Global Setup

    - name: Pico Build Configure CMake
      shell: bash
      run: cmake --help -version

    - name: Pico Build Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=Pico cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Pico Build
      shell: bash
      run: GP2040_BOARDCONFIG=Pico cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
   
    - name: Upload Pico Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - Pico
        path: ${{github.workspace}}/build/GP2040-CE_*_Pico.uf2
        if-no-files-found: error
        
    # #BentoBox
    - name: BentoBox Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=BentoBox cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: BentoBox Build
      shell: bash
      run: GP2040_BOARDCONFIG=BentoBox cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
    
    - name: Upload BentoBox Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - BentoBox
        path: ${{github.workspace}}/build/GP2040-CE_*_BentoBox.uf2
        if-no-files-found: error
        
    #DURAL
    - name: DURAL Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=DURAL cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: DURAL Build
      shell: bash
      run: GP2040_BOARDCONFIG=DURAL cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
    
    - name: Upload DURAL Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - DURAL
        path: ${{github.workspace}}/build/GP2040-CE_*_DURAL.uf2
        if-no-files-found: error

    #FlatboxRev4
    - name: FlatboxRev4 Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=FlatboxRev4 cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: FlatboxRev4 Build
      shell: bash
      run: GP2040_BOARDCONFIG=FlatboxRev4 cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
   
    - name: Upload FlatboxRev4 Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - FlatboxRev4
        path: ${{github.workspace}}/build/GP2040-CE_*_FlatboxRev4.uf2
        if-no-files-found: error
        
    #FlatboxRev5
    - name: FlatboxRev5 Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=FlatboxRev5 cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: FlatboxRev5 Build
      shell: bash
      run: GP2040_BOARDCONFIG=FlatboxRev5 cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
   
    - name: Upload FlatboxRev5 Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - FlatboxRev5
        path: ${{github.workspace}}/build/GP2040-CE_*_FlatboxRev5.uf2
        if-no-files-found: error

    #PicoAnn
    - name: PicoAnn Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=PicoAnn cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: PicoAnn Build
      shell: bash
      run: GP2040_BOARDCONFIG=PicoAnn cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
   
    - name: Upload PicoAnn Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - PicoAnn
        path: ${{github.workspace}}/build/GP2040-CE_*_PicoAnn.uf2
        if-no-files-found: error

    #PicoFightingBoard
    - name: PicoFightingBoard Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=PicoFightingBoard cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: PicoFightingBoard Build
      shell: bash
      run: GP2040_BOARDCONFIG=PicoFightingBoard cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
   
    - name: Upload PicoFightingBoard Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - PicoFightingBoard
        path: ${{github.workspace}}/build/GP2040-CE_*_PicoFightingBoard.uf2
        if-no-files-found: error
            
    #SparkFunProMicro    
    - name: SparkFunProMicro Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=SparkFunProMicro cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: SparkFunProMicro Build
      shell: bash
      run: GP2040_BOARDCONFIG=SparkFunProMicro cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
       
    - name: Upload SparkFunProMicro Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - SparkFunProMicro
        path: ${{github.workspace}}/build/GP2040-CE_*_SparkFunProMicro.uf2
        if-no-files-found: error
            
    #WaveshareZero
    - name: WaveshareZero Configure CMake
      shell: bash
      run: PICO_SDK_PATH=../pico-sdk GP2040_BOARDCONFIG=WaveshareZero cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    
    - name: WaveshareZero Build
      shell: bash
      run: GP2040_BOARDCONFIG=WaveshareZero cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel ${{steps.core_count.outputs.output}}
           
    - name: Upload WaveshareZero Artifact
      uses: actions/upload-artifact@v3.1.1
      with:
        name: GP2040-CE - WaveshareZero
        path: ${{github.workspace}}/build/GP2040-CE_*_WaveshareZero.uf2
        if-no-files-found: error
